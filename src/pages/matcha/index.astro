---
import Layout from '../../layouts/Layout.astro';
import ProgressiveImage from '../../components/ProgressiveImage.astro';

// Get all images from the matcha directory
const images = [
	{ filename: 's-l960.webp', alt: 'Matcha Miku Figurine in Box' },
	{ filename: '220509851.webp', alt: 'Gen sipping pear lavender matcha latte from moonrise bakery' },
	{ filename: '203218645.webp', alt: 'Gen after hitting a 180 50-50 grind, with matcha colored trees in the background' },
	{ filename: '194640510.webp', alt: 'Gen\'s matcha colored bed and matcha colored smoothie' },
	{ filename: '205414879.webp', alt: 'Gen\'s hand poised to dip her almond biscotti into a lavender matcha latte' },
	{ filename: '200225579.webp', alt: 'Gorgeous blueberry lavender matcha latte, in striking layers' },
	{ filename: '200625410.webp', alt: 'Gen\'s homemade drinks including blueberry smoothie, strawberry matcha latte, and lavendermatcha latte' },
	{ filename: '200558431.webp', alt: 'INTIMIDATING angle of Gen\'s homemade drinks including blueberry smoothie, strawberry matcha latte, and lavendermatcha latte' },
	{ filename: '183852785.webp', alt: 'Gen sipping that FREAKY matcha latte with MINT???' },
	{ filename: '193327647.webp', alt: 'Gen skateboarding while holding kilavolt salted egg yolk matcha latte with cold foam' },
	{ filename: '180754746.webp', alt: 'Gen holding matcha latte in her car that she was also sleeping in for fun' },
	{ filename: '193233236.webp', alt: 'Gen\'s matcha latte at home' },
	{ filename: '2485_webp.webp', alt: '21 Savage with the double styrofoam cup of matcha latte...' },
	{ filename: '2885.webp', alt: 'Lebron taking the L... Lumpy asl...' },
	{ filename: '1949_png.webp', alt: 'Matcha cat meme... this cat is matcha... yes he has opps...' },
	{ filename: 'd5bb5487_6df7_4ef3_97b7_8d27782d9f20.webp', alt: 'Gen\'sMatcha tools' },
	{ filename: 'among-us-talking.gif', alt: 'Among Us matcha on chande' },
	{ filename: '1748468776629.webp', alt: 'Zain when they see you eatin on dat matcha cake' }
].filter(img => img.filename !== 'favicon.svg');
---

<Layout title="Genny Matcha" theme="matcha">
	<main>
		<div class="container mx-auto px-4 py-16">
			<h1 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold text-center mb-12 text-pastel-green animate-bounce font-cute whitespace-nowrap w-full overflow-hidden px-4">
                —⁺˖°ʚ Genny Matcha !!! ɞ°⁺˖—
				<br />
				<span class="text-lg sm:text-xl md:text-2xl lg:text-3xl xl:text-4xl">⋆˚✿˖°</span>
			</h1>

			<!-- Vine Boom Sound Embed -->
			<div class="fixed bottom-4 right-4 z-50">
				<iframe width="110" height="200" src="https://www.myinstants.com/instant/vine-boom-sound-70972/embed/" frameborder="0" scrolling="no"></iframe>
			</div>

			<!-- Image and Video Gallery Section -->
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
				{images.slice(0, 6).map((image, index) => (
					<div class={`matcha-image-container ${index % 2 === 0 ? 'animate-float' : ''}`}>
						<ProgressiveImage
							src={`/images/matcha/${image.filename}`}
							alt={image.alt}
							className="matcha-image w-full h-64 rounded-lg shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer"
							style={`animation-delay: ${index * 0.2}s`}
							data-src={`/images/matcha/${image.filename}`}
							thumbnail={true}
							thumbnailContext="gallery"
							objectFit="cover"
						/>
					</div>
				))}
			</div>

			<!-- Video Section -->
			<div class="my-16">
				<div class="max-w-lg mx-auto matcha-image-container animate-float">
					<div class="relative pb-[177.77%] h-0 rounded-lg shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden">
						<video
							class="absolute top-0 left-0 w-full h-full"
							src="/images/matcha/adamnkilla_matcha.mp4"
							controls
							playsinline
							preload="metadata"
							autoplay
							muted
							loop
						>
							Your browser does not support the video tag.
						</video>
					</div>
				</div>
			</div>

			<!-- Remaining Images -->
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
				{images.slice(6).map((image, index) => (
					<div class={`matcha-image-container ${index % 2 === 0 ? 'animate-float' : ''}`}>
						<ProgressiveImage
							src={`/images/matcha/${image.filename}`}
							alt={image.alt}
							className="matcha-image w-full h-64 rounded-lg shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer"
							style={`animation-delay: ${index * 0.2}s`}
							data-src={`/images/matcha/${image.filename}`}
							context="matcha_gallery"
							thumbnail={true}
							thumbnailContext="gallery"
							objectFit="cover"
						/>
					</div>
				))}
			</div>
		</div>

		<!-- Modal for expanded images -->
		<div id="imageModal" class="fixed inset-0 bg-white/30 dark:bg-gray-900/30 backdrop-blur-md hidden items-center justify-center z-50">
			<div class="relative">
				<!-- Loading spinner -->
				<div id="modalLoading" class="absolute inset-0 flex items-center justify-center bg-white/20 dark:bg-gray-900/20 rounded-lg hidden">
					<div class="animate-spin rounded-full h-12 w-12 border-b-2 border-pastel-green"></div>
				</div>
				<img id="expandedImage" class="max-w-[90vw] max-h-[90vh] object-contain rounded-lg shadow-2xl opacity-0 transition-opacity duration-300" src="" alt="Expanded image">
			</div>
		</div>
	</main>

	<style>
		/* Add some fun animations */
		@keyframes float {
			0% { transform: translateY(0px) rotate(0deg); }
			50% { transform: translateY(-20px) rotate(5deg); }
			100% { transform: translateY(0px) rotate(0deg); }
		}

		.animate-float {
			animation: float 6s ease-in-out infinite;
		}

		.matcha-image-container {
			transition: transform 0.3s ease;
		}

		.matcha-image-container:hover {
			transform: scale(1.05);
		}

		.matcha-image {
			transition: all 0.3s ease;
		}

		.matcha-image:hover {
			filter: brightness(1.1);
		}

		#imageModal {
			transition: all 0.3s ease;
		}

		#imageModal.hidden {
			opacity: 0;
			pointer-events: none;
		}

		#imageModal img {
			transition: transform 0.3s ease;
		}

		#imageModal:hover img {
			transform: scale(1.02);
		}

		/* Background with pattern */
		main {
			position: relative;
		}

		main::before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-image: url('/patterns/texture-pattern.svg');
			background-repeat: repeat;
			background-size: 400px;
			mix-blend-mode: multiply;
			opacity: 0.1;
			pointer-events: none;
		}

		.container {
			position: relative;
			z-index: 1;
		}

		.art-credit {
			position: fixed;
			bottom: 8px;
			left: 8px;
			font-size: 0.875rem;
			color: rgba(0, 0, 0, 0.7);
			z-index: 10;
			background: rgba(255, 255, 255, 0.8);
			padding: 4px 8px;
			border-radius: 12px;
			backdrop-filter: blur(4px);
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			transition: all 0.3s ease;
		}

		.art-credit:hover {
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
		}

		.art-credit a {
			color: #98D8AA;
			text-decoration: none;
			font-weight: 500;
			transition: color 0.3s ease;
		}

		.art-credit a:hover {
			color: #FFB6C1;
		}
	</style>

	<script>
		// Analytics tracking functions
		function trackGalleryImageClick(imageSrc: string, imageIndex: number) {
			if (typeof window !== 'undefined' && typeof window.umami !== 'undefined') {
				window.umami.track('gallery_image_click', {
					gallery_name: 'matcha_gallery',
					image_src: imageSrc,
					image_index: imageIndex
				});
				console.log('Tracked gallery image click:', { image_src: imageSrc, image_index: imageIndex });
			}
		}

		function trackGalleryModalOpen(imageSrc: string) {
			if (typeof window !== 'undefined' && typeof window.umami !== 'undefined') {
				window.umami.track('gallery_modal_open', {
					gallery_name: 'matcha_gallery',
					image_src: imageSrc
				});
				console.log('Tracked gallery modal open:', { image_src: imageSrc });
			}
		}

		function trackGalleryModalClose() {
			if (typeof window !== 'undefined' && typeof window.umami !== 'undefined') {
				window.umami.track('gallery_modal_close', {
					gallery_name: 'matcha_gallery'
				});
				console.log('Tracked gallery modal close');
			}
		}

		// Defer non-critical JavaScript
		document.addEventListener('DOMContentLoaded', () => {
			// Track gallery view
			if (typeof window !== 'undefined' && typeof window.umami !== 'undefined') {
				window.umami.track('gallery_view', {
					gallery_name: 'matcha_gallery'
				});
				console.log('Tracked gallery view: matcha_gallery');
			}

			// Use Intersection Observer for better performance
			const observer = new IntersectionObserver((entries) => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						const img = entry.target as HTMLImageElement;
						// Random rotation between -5 and 5 degrees (reduced from -15/15)
						const rotation = Math.random() * 10 - 5;
						img.style.transform = `rotate(${rotation}deg)`;
						
						// Add hover effect
						img.addEventListener('mouseover', () => {
							img.style.transform = `rotate(${rotation + 5}deg) scale(1.1)`;
							img.style.transition = 'transform 0.3s ease';
						});
						
						img.addEventListener('mouseout', () => {
							img.style.transform = `rotate(${rotation}deg)`;
						});

						// Unobserve after processing
						observer.unobserve(img);
					}
				});
			}, {
				rootMargin: '50px 0px',
				threshold: 0.1
			});

			// Observe all progressive images
			document.querySelectorAll('.progressive-main-image').forEach(img => {
				observer.observe(img);
			});

			// Gallery navigation variables
			let currentImageIndex = 0;
			let allImages: HTMLImageElement[] = [];

			// Function to navigate gallery images
			const navigateGallery = (direction: number) => {
				if (allImages.length === 0) return;
				
				currentImageIndex = (currentImageIndex + direction + allImages.length) % allImages.length;
				const targetImg = allImages[currentImageIndex];
				const modal = document.getElementById('imageModal');
				const expandedImg = document.getElementById('expandedImage') as HTMLImageElement;
				const loadingSpinner = document.getElementById('modalLoading');
				
				if (modal && expandedImg && targetImg) {
					// Show loading state
					expandedImg.style.opacity = '0';
					loadingSpinner?.classList.remove('hidden');
					
					const imageSrc = targetImg.dataset.src || targetImg.src || '';
					
					// Load the new image
					const newImg = new Image();
					newImg.onload = () => {
						expandedImg.src = imageSrc;
						expandedImg.alt = targetImg.alt || 'Expanded image';
						expandedImg.style.opacity = '1';
						loadingSpinner?.classList.add('hidden');
					};
					newImg.onerror = () => {
						loadingSpinner?.classList.add('hidden');
						expandedImg.style.opacity = '1';
					};
					newImg.src = imageSrc;
					
					// Track navigation
					if (typeof window !== 'undefined' && typeof window.umami !== 'undefined') {
						window.umami.track('gallery_modal_navigate', {
							gallery_name: 'matcha_gallery',
							direction: direction > 0 ? 'next' : 'previous',
							image_index: currentImageIndex,
							total_images: allImages.length
						});
					}
				}
			};

			// Function to open modal with loading state
			const openModal = (img: HTMLImageElement) => {
				const modal = document.getElementById('imageModal');
				const expandedImg = document.getElementById('expandedImage') as HTMLImageElement;
				const loadingSpinner = document.getElementById('modalLoading');
				
				if (modal && expandedImg) {
					// Clear previous image and show loading
					expandedImg.style.opacity = '0';
					expandedImg.src = '';
					loadingSpinner?.classList.remove('hidden');
					
					// Show modal
					modal.classList.remove('hidden');
					modal.classList.add('flex');
					
					// Load the new image
					const imageSrc = img.dataset.src || img.src || '';
					const newImg = new Image();
					newImg.onload = () => {
						expandedImg.src = imageSrc;
						expandedImg.alt = img.alt || 'Expanded image';
						expandedImg.style.opacity = '1';
						loadingSpinner?.classList.add('hidden');
					};
					newImg.onerror = () => {
						loadingSpinner?.classList.add('hidden');
						expandedImg.style.opacity = '1';
					};
					newImg.src = imageSrc;
					
					// Track modal open
					trackGalleryModalOpen(imageSrc);
				}
			};

			// Function to close modal and clear image
			const closeModal = () => {
				const modal = document.getElementById('imageModal');
				const expandedImg = document.getElementById('expandedImage') as HTMLImageElement;
				const loadingSpinner = document.getElementById('modalLoading');
				
				if (modal) {
					modal.classList.add('hidden');
					modal.classList.remove('flex');
					
					// Clear the image and hide loading
					expandedImg.style.opacity = '0';
					expandedImg.src = '';
					loadingSpinner?.classList.add('hidden');
					
					// Track modal close
					trackGalleryModalClose();
				}
			};

			// Add click handler for image expansion
			document.addEventListener('click', (e) => {
				const target = e.target as HTMLElement;
				const img = target.closest('.progressive-main-image') as HTMLImageElement;
				
				if (img) {
					// Update gallery navigation variables
					allImages = Array.from(document.querySelectorAll('.progressive-main-image')) as HTMLImageElement[];
					currentImageIndex = allImages.indexOf(img);
					
					// Use the original full-size image URL from data-src, fallback to src
					const imageSrc = img.dataset.src || img.src || '';
					
					// Track image click
					trackGalleryImageClick(imageSrc, currentImageIndex);
					
					// Open modal with loading state
					openModal(img);
				}
			});

			// Add click handler to close modal
			const modal = document.getElementById('imageModal');
			if (modal) {
				modal.addEventListener('click', () => {
					closeModal();
				});
			}

			// Keyboard navigation for modal
			document.addEventListener('keydown', (e) => {
				const modal = document.getElementById('imageModal');
				if (!modal || modal.classList.contains('hidden')) return;
				
				switch (e.key) {
					case 'Escape':
						e.preventDefault();
						closeModal();
						break;
					case 'ArrowLeft':
						e.preventDefault();
						navigateGallery(-1);
						break;
					case 'ArrowRight':
						e.preventDefault();
						navigateGallery(1);
						break;
				}
			});
		});
	</script>
</Layout>

<!-- Add art credit -->
<div class="art-credit">
	Background pattern by <a href="https://bsky.app/profile/3lizard.bsky.social" target="_blank" rel="noopener noreferrer" class="underline hover:text-pastel-green">@3lizard.bsky.social</a>
</div> 